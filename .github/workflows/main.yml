name: CI

on:
  push:
    branches: [ master, CI ]
  pull_request:
    branches: [ master, CI ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          acl=2.2.53-6 \
          aria2=1.35.0-1build1 \
          autoconf=2.69-11.1 \
          automake=1:1.16.1-4ubuntu6 \
          binutils=2.34-6ubuntu1.9 \
          bison=2:3.5.1+dfsg-1 \
          brotli=1.0.7-6ubuntu0.1 \
          bzip2=1.0.8-2 \
          coreutils=8.30-3ubuntu2 \
          curl=7.68.0-1ubuntu2.22 \
          dbus=1.12.16-2ubuntu2.3 \
          dnsutils=1:9.16.48-0ubuntu0.20.04.1 \
          dpkg=1.19.7ubuntu3.2 \
          dpkg-dev=1.19.7ubuntu3.2 \
          fakeroot=1.24-1 \
          file=1:5.38-4 \
          findutils=4.7.0-1ubuntu1 \
          flex=2.6.4-6.2 \
          fonts-noto-color-emoji=0~20200916-1~ubuntu20.04.1 \
          ftp=0.17-34.1 \
          g++=4:9.3.0-1ubuntu2 \
          gcc=4:9.3.0-1ubuntu2 \
          gnupg2=2.2.19-3ubuntu2.2 \
          haveged=1.9.1-6ubuntu1 \
          imagemagick=8:6.9.10.23+dfsg-2.1ubuntu11.9 \
          iproute2=5.5.0-1ubuntu1 \
          iputils-ping=3:20190709-3ubuntu1 \
          jq=1.6-1ubuntu0.20.04.1 \
          lib32z1=1:1.2.11.dfsg-2ubuntu1.5 \
          libc++-dev=1:10.0-50~exp1 \
          libc++abi-dev=1:10.0-50~exp1 \
          libc6-dev=2.31-0ubuntu9.16 \
          libcurl4=7.68.0-1ubuntu2.22 \
          libgbm-dev=21.2.6-0ubuntu0.1~20.04.2 \
          libgconf-2-4=3.2.6-6ubuntu1 \
          libgsl-dev=2.5+dfsg-6+deb10u1build0.20.04.1 \
          libgtk-3-0=3.24.20-0ubuntu1.1 \
          libmagic-dev=1:5.38-4 \
          libmagickcore-dev=8:6.9.10.23+dfsg-2.1ubuntu11.9 \
          libmagickwand-dev=8:6.9.10.23+dfsg-2.1ubuntu11.9 \
          libsecret-1-dev=0.20.4-0ubuntu1 \
          libsqlite3-dev=3.31.1-4ubuntu0.6 \
          libtool=2.4.6-14 \
          libunwind8=1.2.1-9ubuntu0.1 \
          libxkbfile-dev=1:1.1.0-1 \
          libxss1=1:1.2.3-1 \
          libyaml-dev=0.2.2-1 \
          locales=2.31-0ubuntu9.16 \
          m4=1.4.18-4 \
          make=4.2.1-1.2 \
          mediainfo=19.09-1build1 \
          mercurial=5.3.1-1ubuntu1 \
          net-tools=1.60+git20180626.aebd88e-1ubuntu1 \
          netcat=1.206-1ubuntu1 \
          openssh-client=1:8.2p1-4ubuntu0.11 \
          p7zip-full=16.02+dfsg-7build1 \
          p7zip-rar=16.02-3build1 \
          parallel=20161222-1.1 \
          pass=1.7.3-2 \
          patchelf=0.10-2build1 \
          pigz=2.4-1 \
          pkg-config=0.29.1-0ubuntu4 \
          pollinate=4.33-3ubuntu1.20.04.1 \
          python-is-python3=3.8.2-4 \
          rpm=4.14.2.1+dfsg1-1build2 \
          rsync=3.1.3-8ubuntu0.7 \
          shellcheck=0.7.0-2build2 \
          sphinxsearch=2.2.11-2ubuntu2 \
          sqlite3=3.31.1-4ubuntu0.6 \
          ssh=1:8.2p1-4ubuntu0.11 \
          sshpass=1.06-1 \
          subversion=1.13.0-3ubuntu0.2 \
          sudo=1.8.31-1ubuntu1.5 \
          swig=4.0.1-5build1 \
          tar=1.30+dfsg-7ubuntu0.20.04.4 \
          telnet=0.17-41.2build1 \
          texinfo=6.7.0.dfsg.2-5 \
          time=1.7-25.1build1 \
          tk=8.6.9+1 \
          tzdata=2024a-0ubuntu0.20.04.1 \
          unzip=6.0-25ubuntu1.2 \
          upx=3.95-2build1 \
          wget=1.20.3-1ubuntu2.1 \
          xorriso=1.5.2-1 \
          xvfb=2:1.20.13-1ubuntu1~20.04.17 \
          xz-utils=5.2.4-1ubuntu1.1 \
          zip=3.0-11build1 \
          zsync=0.6.2-3ubuntu1


      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install
        run: |
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get install -y dpkg firefox
          npm install -g testcafe
          ./tools/install-tarantool.sh
          ./control-install.sh
          source $HOME/.cargo/env

      - name: Print versions
        run: |
          node --version
          testcafe --version
          rustc -V

      - name: Build
        run: |
          source $HOME/.cargo/env
          export CARGO_TARGET_DIR=$HOME/target
          ./build.sh

      - name: Set up core dump configuration
        run: |
          # Создаем директорию для core dumps
          export COREDUMP_DIR=$GITHUB_WORKSPACE/corefiles
          mkdir -p $COREDUMP_DIR
          # Включаем создание core dumps
          ulimit -c unlimited
          # Устанавливаем шаблон для имени core dump
          echo "kernel.core_pattern=${COREDUMP_DIR}/core.%e.%t.%p.%s" | sudo tee /etc/sysctl.d/60-core-pattern.conf
          sudo sysctl --system

      - name: Test
        run: |
          # Запускаем скрипт
          ./control-start.sh
          sleep 200

          # Проверяем наличие core dump файлов
          echo "Checking for core dumps..."
          CORE_FILES=$(find $COREDUMP_DIR -name "core.veda-az-indexer*" 2>/dev/null)
          if [ -n "$CORE_FILES" ]; then
              echo "Core files found:"
              echo "$CORE_FILES"
              for FILE in $CORE_FILES; do
                  echo "Processing file: $FILE"
                  gdb ./bin/veda-az-indexer "$FILE" -ex "bt"
              done
          else
              echo "No core files found."
          fi

          # Выводим логи
          tail -n +1 ./data/tarantool/tarantool.log
          tail -n +1 ./logs/*.log
          cd ./source-web && npm test
