I) Назначение - предоставить единый интерфейс к различным источникам данных платформы.
А именно:
1) База данных MySQL
2) База данных ClickHouse
3) Xapian
4) Графовая база данных

названия доступных источников данных - ["clickhouse", "mysql", "xapian", "graphql"]

Конечные точки подключения должны описываться индивидами типа v-s:Query
Пример:

v-s:Query1
  rdf:type v-s:Query ;
  v-s:source "clickhouse" ;
  v-s:queryString """
SELECT id, version, sign, rdfs_label_str as label FROM veda_tt."v-s:Person" WHERE version = {v-s:param1}
""" ;
  v-s:resultFormat "rows"|"cols"|"full"
.

Этот индивид описывает источник данных и сам запрос, содержащий подстановочные переменные. 
Значения этих переменных должны извлекаться из параметров запроса к модулю.

Пример запроса:

POST /query?ticket=_ticket,
{
  "stored_query": "v-s:Query1",
  "params": {
    "@": _someRandomId,
    "rdf:type": [{
      "data":"v-s:QueryParams",
      "type":"Uri"
    }],
    "v-s:param1": [{
      "data":1,
      "type":"Integer"
    }],
    "v-s:resultFormat": [{
      "data":"rows"|"cols"|"full",
      "type":"String"
    }],
  }
}

Результат исполнения запроса должен возвращаться в виде JSON объекта и содержать столбцы указанные в запросе с учетом параметра форматирования результатов ("v-s:resultFormat" = rows|cols).
"v-s:resultFormat" = full:
{
  "cols": ["id", "version", "sign", "label"],
  "rows": [
    {
      "id": "d:123",
      "version": 1,
      "sign": -1,
      "label": ["Администратор1  .@ru", "Administrator1  .@en"]
    },
    {
      "id": "d:456",
      "version": 1,
      "sign": -1,
      "label": ["Администратор2  .@ru", "Administrator2  .@en"]
    },
    ...
  ]
}

"v-s:resultFormat" = rows:
{
  "cols": ["id", "version", "sign", "label"],
  "rows": [
    ["d:123", 1, -1, ["Администратор1  .@ru", "Administrator1  .@en"]],
    ["d:456", 1, -1, ["Администратор2  .@ru", "Administrator2  .@en"]],
    ...
  ]
}

"v-s:resultFormat" = cols:
{
  "id": ["d:123", "d:456", ...],
  "version": [1, 1, ...],
  "sign": [-1, -1, ...],
  "label": [
    ["Администратор1  .@ru", "Administrator1  .@en"],
    ["Администратор2  .@ru", "Administrator2  .@en"],
    ...
  ]
}

II) Авторизация.
Предикат сохраненного v-s:authorizationLevel задает уровень авторизации результатов и может принимать 3 значения:
 - "query". В этом случае модуль проверяет только права пользователя на чтение по отношению к индивиду запроса.
 - "row-column". В этом случае модуль запросов исключает из результатов целые строки или столбцы (в зависимости от выбранного представления результатов), содержащие URI не прошедшие авторизацию на чтение.
 - "cell". В этом случае модуль в результатах запроса заменяет URI индивидов не прошедших авторизацию на чтение строкой NotAuthorized.
